<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mercurial on My New Hugo Site</title>
    <link>http://haruute0.github.io/categories/mercurial/</link>
    <description>Recent content in Mercurial on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Apr 2010 15:33:36 +0000</lastBuildDate>
    <atom:link href="http://haruute0.github.io/categories/mercurial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mercurial: the end of the beginning</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/04/mercurial-the-end-of-the-beginning/</link>
      <pubDate>Mon, 05 Apr 2010 15:33:36 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/04/mercurial-the-end-of-the-beginning/</guid>
      <description>&lt;p&gt;Today marks the last day of classes at the University of Waterloo, and so ends the official portion of the UCOSP project for Tessa, Wendy, and myself. During our last meeting on April 1st, we tied some loose ends on our patches and discussed our experiences in the project. I will save the details for the final reports, but we all agreed that we&amp;#8217;d like to continue contributing to Mercurial as time permits.&lt;/p&gt;

&lt;p&gt;Paul and Alex have a little more time before official end of classes at UBC, and we&amp;#8217;ll probably be hearing from them after the meeting this week.&lt;/p&gt;

&lt;p&gt;Status updates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bfiles auto-* integration

&lt;ul&gt;
&lt;li&gt;auto-status and auto-update have been accepted into bfiles&lt;/li&gt;
&lt;li&gt;auto-put and auto-refresh are almost there&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Wendy and Tessa continued to improve on their warm-up projects:&lt;/li&gt;
&lt;li&gt;Paul has a working version of bfilesify which converts existing mercurial repositories to use bfiles. We are playing around with it to provide feedback.&lt;/li&gt;
&lt;li&gt;Alex has been working on his ever-popular case guard extension.&lt;/li&gt;
&lt;li&gt;I have started work on implementing my extended status proposal which aims to create closer integration between bfiles, subrepos, and core Mercurial code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As always, you can find detailed status reports on our Wiki at &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W44&#34;&gt;https://ucosp.fogbugz.com/default.asp?W44&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Real Challenge of UCOSP</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/04/the-real-challenge-of-ucosp/</link>
      <pubDate>Mon, 05 Apr 2010 15:08:16 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/04/the-real-challenge-of-ucosp/</guid>
      <description>&lt;p&gt;&amp;#8220;The real challenge of GSoC is not the coding, it&amp;#8217;s learning to work with a community,&amp;#8221; wrote Matt Mackall to the Mercurial mailing list a couple days ago with regard to the upcoming Google Summer of Code projects: &lt;a href=&#34;http://selenic.com/pipermail/mercurial/2010-April/030996.html&#34;&gt;http://selenic.com/pipermail/mercurial/2010-April/030996.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe this applies equally well to us: the real challenge of UCOSP is not the coding, it&amp;#8217;s learning to work with a community. This is especially true for the Mercurial team because we are working with such a large, established, global community of developers. Working within our UCOSP team was alright for our initial warm-up projects where we built new Mercurial extensions or added isolated features, but it became very important when we started working on the bfiles extension. We collaborated extensively with Greg Ward, the creator of bfiles. Towards the end, he helped us extensively with combining and polishing our patches, and as a result, they integrated smoothly into his tree. The more we engaged the developer community, the more productive we became.&lt;/p&gt;

&lt;p&gt;The post that I link to has some other great pointers for anyone new to an opensource project &amp;#8211; not necessarily those doing it for credit or money. It&amp;#8217;s worth a read.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mercurial # the end if nigh</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/03/mercurial-the-end-if-nigh/</link>
      <pubDate>Fri, 26 Mar 2010 20:41:36 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/03/mercurial-the-end-if-nigh/</guid>
      <description>&lt;p&gt;For some of us on the Mercurial crew next week is the closing chapter of the UCOSP adventure. Tessa, Wendy and Anton from Waterloo will be finishing their term, and with that their contributions to Mercurial as part of the program. That&amp;#8217;s not to say they&amp;#8217;ll be done with Mercurial for good—the general consensus is that we all had a great time. Paul and myself still have until mid-April to get the remainder of our work submitted.&lt;/p&gt;

&lt;p&gt;For the last couple of weeks we&amp;#8217;ve all been focusing on bfiles, the big/binary file extension for Mercurial. For the most part, the functionality that&amp;#8217;s been added is to automate certain functions so that the user doesn&amp;#8217;t have to remember to do so:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tessa&lt;/strong&gt; finished up autoput, including tests for the feature. She&amp;#8217;s also submitted a few more changes for her globexclude patch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wendy&lt;/strong&gt; worked on autorefresh and autoupdate for bfiles, as well as some final tweaks for her tagmerge extension.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton&lt;/strong&gt; polished up autostatus for bfiles and began work on extended status support.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Paul&lt;/strong&gt; has been working on bfilesify, an extension to convert a regular Mercurial repository to a bfiles one. This means all large binary files get detected and plugged into bfiles, with the history accurately maintained.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alexandru&lt;/strong&gt; worked on supporting HTTP PUT for bfiles, so that users can push their large files to remote repositories via HTTP (currently, only SSH is supported). Additional work went into caseguard to provide a feature that allows users to check an existing repository for filename issues. Alexandru also apologizes for talking in the 3rd person for this section, it was done in the interest of post formatting.&lt;/p&gt;

&lt;p&gt;More information available from our weekly &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W41&#34;&gt;Wiki status page&lt;/a&gt; and the &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W43&#34;&gt;IRC log&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial is still flowing</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/03/mercurial-is-still-flowing/</link>
      <pubDate>Fri, 05 Mar 2010 02:54:04 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/03/mercurial-is-still-flowing/</guid>
      <description>&lt;p&gt;In Mercurial land, we&amp;#8217;ve made progress in closer integration between bfiles and core Mercurial commands, a tool to &amp;#8220;&lt;strong&gt;bfile&lt;/strong&gt;sify&amp;#8221; a Mercurial repository, and further work on the caseguard extension. More details below.&lt;/p&gt;

&lt;p&gt;Due to various scheduling conflicts, we did not have a status meeting last week. This week the meeting happened on Wednesday at 9pm EST. We&amp;#8217;ll be back to Thursdays at 6:30pm EST starting next week.&lt;/p&gt;

&lt;p&gt;Chat transcript: &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W38&#34;&gt;https://ucosp.fogbugz.com/default.asp?W38&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Status reports for two weeks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W35&#34;&gt;February 25th&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W36&#34;&gt;March 3rd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Closer bfiles integration: as I&amp;#8217;ve discussed in a &lt;a href=&#34;http://ucosp.wordpress.com/2010/01/29/mercurial-progress-report-week-4/&#34; title=&#34;Week 4 status report introducing bfiles&#34;&gt;previous post&lt;/a&gt;, bfiles is an extension to store history of big and binary files outside the repository. Currently ther bfiles extension has its own set of commands: &amp;#8216;hg bfstatus&amp;#8217; analogous to &amp;#8216;hg status&amp;#8217;, &amp;#8216;hg bfadd&amp;#8217; analogous to &amp;#8216;hg add&amp;#8217;, etc. We want to integrate them into the core commands like &amp;#8216;hg status&amp;#8217;.&lt;/p&gt;

&lt;p&gt;While I spent my time discussing auto-status integration and debating the proper way to do it, Tessa and Wendy made significant progress on auto-put, auto-update, and auto-refresh. We are ready to try using and testing the parts together before making them ready for submission (as individual patches/branches).&lt;/p&gt;

&lt;p&gt;[Edit 3/5/2010: removed confusing wording about &amp;#8220;combining into a single patch&amp;#8221;]&lt;/p&gt;

&lt;p&gt;Paul has taken up the torch on a much-needed extension we call &amp;#8216;bfilesify&amp;#8217; which would take a regular repository and convert it to using bfiles where appropriate. This is an exciting project which should greatly ease the transition to bfiles.&lt;/p&gt;

&lt;p&gt;Last but not least, Alex has been polishing up caseguard and improved its performance to the point where the impact on speed from using caseguard is negligible. Caseguard has also become a somewhat regular topic on the mercurial mailing lists &amp;#8211; a good indication that it sees real use.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wendy&amp;#039;s Midterm report</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/03/wendys-midterm-report/</link>
      <pubDate>Mon, 01 Mar 2010 19:20:38 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/03/wendys-midterm-report/</guid>
      <description>&lt;p&gt;It has been a very good learning experience for me to work with Mercurial team so far.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I learned&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;To be honest, I had no experience in python coding or Mercurial at the beginning of the semester.  I was terrified that I had no idea how to start my worm-up project tagmerge extension at the code sprint. Thankfully, Benjamin was really patient with me and guided me where to start off.  After couple of weeks working on tagmerge, I become comfortable with python and familiar with some mercurial libraries.&lt;/p&gt;

&lt;p&gt;Same as many other members on the team, this is also my first experience working on an open-source project. In my co-op experience, I usually only discuss issues with my supervisor or co-workers.  Issues are only discovered during the QA process. When doing development in Mercurial, we have to handle both development and do our best to cover all the test cases. It is very important to discuss issues we encountered through mailing list or IRC instead of just with only supervisor or co-workers, because other developers may identify scenarios I missed or give me ideas on how to implement some features.  All these suggestions are very helpful for my work and my own development.&lt;/p&gt;

&lt;p&gt;**What I work on:&lt;/p&gt;

&lt;p&gt;**&lt;/p&gt;

&lt;p&gt;We each started with a warm-up project to get familiar with Mercurial. I worked on tagmerge extension to merge hg tags. I successfully finished the development and testing and announced it a few weeks ago. However, I still need to work on some improvement before get it published.&lt;/p&gt;

&lt;p&gt;The team is currently focused on bfiles extension now. Three of us from UW are working on integration of some bfiles commands. As everyone else mentioned, we are a bit slow due to the midterm period. I had my part of design set, and hopefully, will finish the draft by this week.&lt;/p&gt;

&lt;p&gt;Overall, I think I&amp;#8217;m doing good so far. I&amp;#8217;ve learned a lot from my projects, keeped up with weekly reports, meetings and tried to join discussions on mailing lists. However, I always started real working from Monday, which leaves me less time to get reviews of my code before the Thursday meeting. For the rest of the semester, I will improve my time management and try to contribute more of my work to Mercurial.  I’m excited about the challenges ahead.&lt;/p&gt;

&lt;p&gt;﻿&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Mercurial Team&amp;#039;s Midway Report</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/the-mercurial-teams-midway-report/</link>
      <pubDate>Sun, 28 Feb 2010 04:33:41 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/the-mercurial-teams-midway-report/</guid>
      <description>&lt;p&gt;When we set out at the beginning of UCOSP, my goal was for us to contribute significantly to Mercurial by the end of the semester. How well have we accomplished that goal so far?&lt;/p&gt;

&lt;p&gt;At the beginning of the semester, all of the students were given small, self-contained bug fixes and features that we&amp;#8217;d discovered people wanted over the course of developing Kiln, mostly in the form of Mercurial extensions. Four of these were quickly completed: &lt;a href=&#34;http://bitbucket.org/paulitex/cedit/&#34;&gt;cedit&lt;/a&gt;, a command-line-based way to configure Mercurial; &lt;a href=&#34;http://bitbucket.org/antmar/cache-annotations/&#34;&gt;cache-annotations&lt;/a&gt;, which makes annotating files repeatedly ridiculously fast; globexclude, which allows you to exclude files based on their glob pattern when doing conversions to Mercurial; and &lt;a href=&#34;http://bitbucket.org/alexandru/caseguard/&#34;&gt;caseguard&lt;/a&gt;, which warns you when you are committing files that have names that will prevent Mac and Windows users from using your repository. Of these, globexclude and caseguard will be submitted (with some slight modifications) for inclusion into Mercurial 1.6, and cache-annotations already ships with every version of Kiln. This part of the project I consider a complete success.&lt;/p&gt;

&lt;p&gt;Since then, we have transitioned from everyone doing a little project to everyone working on &lt;a href=&#34;http://vc.gerg.ca/hg/hg-bfiles&#34;&gt;bfiles&lt;/a&gt;, an extension to Mercurial that is designed to ameliorate using Mercurial with projects that involve large binary files.&lt;/p&gt;

&lt;p&gt;I would be lying if I said I wasn&amp;#8217;t slightly disappointed with the work done on bfiles so far—not really through any fault of my students, as much as due to the nature of what they&amp;#8217;re trying to accomplish. bfiles is necessarily a more complex problem than the initial, self-contained feature sprints: bfiles requires some changes to Mercurial&amp;#8217;s workflow, and these changes don&amp;#8217;t always have a single, straightforward solution, and so everyone has to take the discussion to the Mercurial mailing list to figure out how to proceed. Having these discussions is unquestionably &lt;em&gt;not&lt;/em&gt; a waste of time. These are delicate issues, and working with the Mercurial community to determine how to proceed is an absolutely necessity. This has, unfortunately, had the side-effect of delaying writing some of the code we wanted for bfiles until we can get some of the design straightened out.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m nevertheless still very optimistic for the second half of the semester. We&amp;#8217;ve sorted out a lot of the hard issues, allowing everyone to begin focusing on writing code again (even if only for initial prototypes, in some cases). Simultaneously, we&amp;#8217;ve begun working on some aspects of bfiles that do not require so much debate to ensure that we&amp;#8217;re doing the &amp;#8220;right&amp;#8221; thing. This means we can continue to code, while still carefully consulting the community on ambiguous areas.&lt;/p&gt;

&lt;p&gt;Balancing requirements gathering with simply getting the code done can be a complicated affair on open-source and commercial projects alike. I think we&amp;#8217;ve been erring too much towards discussion in the last couple of weeks, but as long as we can correct ourselves soon and get focused on the code again, I&amp;#8217;m still confident that we&amp;#8217;ll get nearly everything accomplished this semester that we set out to do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>alexandru&amp;#039;s Half-Time View</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/alexandrus-half-time-view/</link>
      <pubDate>Fri, 26 Feb 2010 01:31:35 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/alexandrus-half-time-view/</guid>
      <description>

&lt;h2 id=&#34;warm-up:bdc7552d5d23fc2aedf3707ca77ffdc9&#34;&gt;warm-up&lt;/h2&gt;

&lt;p&gt;I&amp;#8217;ve used open-source software for the last 7 years (which &lt;del&gt;is&lt;/del&gt; &lt;em&gt;feels like&lt;/em&gt; a blip in Internet time). I was aware since the beginning that these projects thrive on contributions from people all over the world. And I knew that these tools had bugs and had roadmaps with desired features waiting on some developer to tackle. But before UCOSP I&amp;#8217;ve never made a solid contribution to anything. I always imagined expert programmers are the only ones that have a business getting involved in these projects and submitting patches and extensions. So I stayed on the sidelines for the most part, always saying I&amp;#8217;ll do it later, when I got better at programming.&lt;/p&gt;

&lt;p&gt;When UCOSP started, I was thrilled to be working on the Mercurial project. I was also thrilled to finally have the time to learn Python, and terrified by not really knowing any. I had my doubts, early on, about being able to get something decent done by the end of April. This wasn&amp;#8217;t the first time I dived head-first into something of the sort (having completed 5 internships at various software outfits during my student career), but it felt different. It was going to be out in the world for people to use. I was finally working on an open source project, planning on contributing something I knew was needed.&lt;/p&gt;

&lt;p&gt;Guess what? It&amp;#8217;s going great! Over the past years I kept hearing that failing is not a bad thing, that if you don&amp;#8217;t get it right the first time the World won&amp;#8217;t implode. I&amp;#8217;ve learnt that failure comes more often from the desire to be perfect than from the work itself, because perfection is the enemy of productivity, and over-engineering is something we&amp;#8217;re all very prone too. So I made bite-sized goals and I&amp;#8217;ve incrementally built &lt;a href=&#34;http://hackd.net/projects/caseguard&#34; title=&#34;caseguard&#34;&gt;caseguard&lt;/a&gt;, my Mercurial extension that&amp;#8217;s meant to help developers avoid filename collisions (on case-insensitive filesystems) and the feedback so far has been good. The Mercurial devel mailing list has been invaluable for both feature recommendations and help with the existing design, and the UCOSP mentor, &lt;a href=&#34;http://bitquabit.com&#34;&gt;Benjamin Pollack&lt;/a&gt; has been similarly patient with us.&lt;/p&gt;

&lt;h2 id=&#34;sideline:bdc7552d5d23fc2aedf3707ca77ffdc9&#34;&gt;sideline&lt;/h2&gt;

&lt;p&gt;Acquaintance to how open source works is an indispensable experience, especially for students, because it&amp;#8217;s so different from anything else we&amp;#8217;re normally exposed to. All great software, whether open source or not, is built because someone needs it. Often times students and junior developers don&amp;#8217;t get an opportunity to pursue their ideas inside a project because the requirements are either filling up the entire course time, or the senior developers have already outlined the things that need to get done. But with open source (and, by extension, UCOSP) we get to own our code and take it in whichever direction we feel it should go. Community feedback can be a driving force, but it&amp;#8217;s not law. Learning how to prioritize, which features are important and which nice-to-have ones you should delay until a time they&amp;#8217;re actually needed, quieting the inner voice that wants to keep adding things because some believe that more is better, these are all skills that matter greatly in software development. Sometimes, they might decide a project&amp;#8217;s success more than the pure programming prowess of the developers involved.&lt;/p&gt;

&lt;p&gt;I wish I started contributing to open source earlier, but it&amp;#8217;s never too late. The biggest failure comes from not trying at all; anything else is already better. My experience in UCOSP so far proves my point, and I hope that&amp;#8217;s true for everybody across all teams this term. I hope UCOSP-like courses become the norm in Computer Science/Engineering programs, because they help a developer&amp;#8217;s education once all the theory has been absorbed throughout the program years.&lt;/p&gt;

&lt;h2 id=&#34;second-half:bdc7552d5d23fc2aedf3707ca77ffdc9&#34;&gt;second half&lt;/h2&gt;

&lt;p&gt;For the second part of the term I&amp;#8217;m going to continue work on caseguard, targeting inclusion in the Mercurial distribution for 1.6 (targeted release July 1st). It may be an extension included in the core distribution or it may be part of the actual tool itself (over IRC, the Mercurial project lead Matt Mackall suggested I submit a patch to see how it would work in core) and that&amp;#8217;s all very exciting. Python is a very elegant language and I&amp;#8217;m liking it the more I learn it, and I&amp;#8217;m lucky to be working with a code-base that many consider to be an example in programming practices (by and large, but not entirely). I&amp;#8217;m also working with everyone else on improving bfiles, an extension meant to improve the way Mercurial deals with big/binary files, and my first order of business is supporting HTTP uploads.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anton&amp;#039;s Midway Update</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/antons-midway-update/</link>
      <pubDate>Wed, 24 Feb 2010 18:16:20 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/antons-midway-update/</guid>
      <description>&lt;p&gt;It&amp;#8217;s hard to believe that we are already &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; way through the UCOSP Mercurial project. It has been an amazing learning experience from both a technical and a social point of view.&lt;/p&gt;

&lt;p&gt;I started out this project with some limited experience of using Mercurial on my own system. Not only did I have to learn Mercurial in the context of a team, but I also had to put myself in the shoes of users very different from myself. We are working on features for large teams with large repositories who have different requirements from individual developers. I will get back to this later.&lt;/p&gt;

&lt;p&gt;My experience with Python was equally limited. I had used it for a couple of school assignments in the past, but as most of you know, one-time throw-away assignment code is nothing like a mature open-source project. As the Python coding guidelines quote, &amp;#8220;Code is meant to be read by humans and only occasionally by computers.&amp;#8221; Python is a powerful language, and I&amp;#8217;ve been blown away by how clear and concise the code is. On the other hand, like any powerful tool, it must be used wisely and consistently.&lt;/p&gt;

&lt;p&gt;From a social point of view, this is my first experience contributing code to an open-source project. The basic concept of bug tracking, specifications, and code reviews were familiar to me from co-op terms, but they take on a new light in an open-source project. While there are three of us working on Mercurial from the University of Waterloo, and we have met to discuss our work face-to-face, we quickly learned that any important discussion must take place on the public mercurial-devel mailing list. It is tempting to talk and decide things amongst ourselves, but it is important to involve the other developers and users of Mercurial. This is especially important when modifying other people&amp;#8217;s code or working with scenarios that we don&amp;#8217;t have personal experience with.&lt;/p&gt;

&lt;p&gt;We started off the semester poking around and learning about Mercurial. The real work started at the UCOSP code sprint in Toronto where we spent 3 days hacking away on Mercurial together, in the same room. We all had small warm-up projects to work on. I worked on an extension to cache the results of the &amp;#8216;hg annotate&amp;#8217; command which shows, for each line of a file, the last time when it was modified. This project went well and the code was polished up in another week. I&amp;#8217;ve since released it publicly on Bitbucket, and it has been integrated into FogCreek&amp;#8217;s Kiln product.&lt;/p&gt;

&lt;p&gt;Our next challenge was the bfiles extension. The bfiles extension is designed to make working with large binary files more convenient. Instead of storing the entire history of every file in every clone of the repository, the history is stored on a central server and each revision is downloaded as needed.&lt;/p&gt;

&lt;p&gt;We seemed to hit a slow period with bfiles. It is a large extension which messes with various internal Mercurial functions. Furthermore, our tasks were very broadly-defined. We spent three weeks discussing different approaches on the mercurial-devel mailing list and getting the functional specs right. Finally I was able to start coding over reading week, but I hit implementation decisions and went back to the mailing list to discuss them.&lt;/p&gt;

&lt;p&gt;Greg Wilson has taken every opportunity to emphasize the importance of communication on this project. I couldn&amp;#8217;t agree more. Writing this update has helped me to organize my thoughts. I am off to do work.&lt;/p&gt;

&lt;p&gt;~Anton&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial Weekly Report (Week 8)</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-weekly-report-week-8/</link>
      <pubDate>Fri, 19 Feb 2010 16:19:42 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-weekly-report-week-8/</guid>
      <description>&lt;p&gt;We continued our work on bfiles and improving our patches this week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Patches:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cedit (paulitex):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Submit unit test and rege fix for iniparse&lt;/li&gt;
&lt;li&gt;Documentation for credit&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tagmerge(Wendy):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use tag.py functions to read tags&lt;/li&gt;
&lt;li&gt;Changed the merge algorithm&lt;/li&gt;
&lt;li&gt;Debugging writing tags problem&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;convert (Tessa):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tested standard mercurial matcher&lt;/li&gt;
&lt;li&gt;Refactored filemapper to use the mercurial match&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;caseguard (alexandru):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Removed the protection for `hg rm&amp;#8217;&lt;/li&gt;
&lt;li&gt;Code clean-up/polish&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;bfiles:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;auto-status(antmar): implemented and submitted the initial version (wraps &amp;#8220;hg status&amp;#8221; command)&lt;/li&gt;
&lt;li&gt;auto-put(Tessa): read through more code about it and revisited the proposal&lt;/li&gt;
&lt;li&gt;auto-refresh &amp;amp; auto-update (Wendy): created detailed proposal on the mailing list and discussed about the proposal&lt;/li&gt;
&lt;li&gt;bfiles HTTP upload(alexandru): started investigate this issue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We further discussed the problems we met this week and plan to finish the patches and submit a working code draft for bfiles command integration.&lt;/p&gt;

&lt;p&gt;Details are in &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W6&#34;&gt;IRC meeting&lt;/a&gt; and &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W34&#34;&gt;status report&lt;/a&gt; .&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial Weekly Status Report (Week 7)</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-weekly-status-report-week-7/</link>
      <pubDate>Fri, 12 Feb 2010 03:51:40 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-weekly-status-report-week-7/</guid>
      <description>&lt;p&gt;Here is a summary of what we&amp;#8217;ve been up to this week. As usual, the IRC  &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W32&#34;&gt;transcript&lt;/a&gt; of the meeting and our more detailed   &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W29&#34;&gt;status report&lt;/a&gt; are posted.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Continued work on our our patches  that were submitted last weeks&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Progress with bfiles:&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Benjamin set up a Linode server for us to develop and test the network-related  bfiles issues&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Continued  discussion on the  the mercurial-devel mailinglist with seasoned mercurial developers regarding our ideas for autorefresh  and how to keep the bfiles in the respository in a consistant state&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After we finished discussing UCOSP-specific issues, we move to the main Mercurial IRC channel where we further discussed getting  rid of bfrefresh, and having the refresh happen automatically.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial: Public Announcements</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-public-announcements/</link>
      <pubDate>Thu, 04 Feb 2010 19:50:34 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/02/mercurial-public-announcements/</guid>
      <description>

&lt;p&gt;All of us on the Mercurial team have submitted extensions and patches to the devel mailing list this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Anton&amp;#8217;s &lt;em&gt;cache annotations&lt;/em&gt; extension (&lt;a href=&#34;http://selenic.com/pipermail/mercurial-devel/2010-February/018313.html&#34;&gt;list announcement&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Paul&amp;#8217;s &lt;em&gt;cedit&lt;/em&gt; configuration editor extension (&lt;a href=&#34;http://selenic.com/pipermail/mercurial-devel/2010-February/018318.html&#34;&gt;list announcement&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tessa&amp;#8217;s &lt;em&gt;convert&lt;/em&gt; patch, to support glob excludes (&lt;a href=&#34;http://selenic.com/pipermail/mercurial-devel/2010-February/018338.html&#34;&gt;list announcement&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Alexandru&amp;#8217;s &lt;em&gt;caseguard&lt;/em&gt; case-fold collision prevention extension (&lt;a href=&#34;http://selenic.com/pipermail/mercurial-devel/2010-February/018368.html&#34;&gt;list announcement&lt;/a&gt; | &lt;a href=&#34;http://mrtoto.net/post/370905475/caseguard-a-mercurial-extension&#34;&gt;blog post&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Wendy&amp;#8217;s &lt;em&gt;tagmerge&lt;/em&gt; extension for merging .hgtags (&lt;a href=&#34;http://selenic.com/pipermail/mercurial-devel/2010-February/018387.html&#34;&gt;list announcement&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The feedback&amp;#8217;s been great so far, as have the bug reports (which means at least a few people tried out what we made). We&amp;#8217;re planning on moving on to &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W19&#34;&gt;new things&lt;/a&gt; in the coming weeks, though of course we&amp;#8217;ll have to maintain our extensions from now until forever. It was a good week in the Mercurial camp.&lt;/p&gt;

&lt;h2 id=&#34;weekly-status-meeting:3ed17a075564eedca7d1ec9960c04086&#34;&gt;WEEKLY STATUS MEETING&lt;/h2&gt;

&lt;p&gt;During our regularly scheduled weekly meeting, we decided to engage with the Mercurial community at large, so we moved from our regular place on #ucosp-mercurial to the main Mercurial IRC channel, #mercurial (both on Freenode, details on our &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W6&#34;&gt;Communications&lt;/a&gt; page). The discussion revolved mostly around bfiles, an extension all of us are working on currently. Bfiles allows Mercurial users to store their large binary files in remote locations, and as we&amp;#8217;re improving the existing code-base, certain decisions need to be made before development can move forward. The complete IRC log for the meeting &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W28&#34;&gt;is available&lt;/a&gt; as usual, and a more detailed breakdown of what everyone&amp;#8217;s working on can be found on our &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W13&#34;&gt;weekly journal page&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial Progress Report (Week 4)</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-progress-report-week-4/</link>
      <pubDate>Fri, 29 Jan 2010 16:09:03 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-progress-report-week-4/</guid>
      <description>&lt;p&gt;We have made substantial progress towards getting our initial contributions ready for submitting to the mercurial-devel mailing list. This has been a week of testing and code reviews where we all learned something new about Mercurial and writing python code in general.&lt;/p&gt;

&lt;p&gt;To summarize, you can expect the following extensions to be submitted to the mercurial mailing list in the next week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tagmerge (wendyY): support smart merging of tag files (tags are labels for specific commits or heads)

&lt;ul&gt;
&lt;li&gt;some fixes and testing, testing, testing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;cedit (paulitex): command line and interactive editing of mercurial configuration files with shortcuts for common setup operations

&lt;ul&gt;
&lt;li&gt;submitted iniparse (external lib) changes upstream&lt;/li&gt;
&lt;li&gt;documentation, bootstrapping, testing, testing, testing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;convert (Tessa): modifying the convert extension to support wildcards in exclude statements

&lt;ul&gt;
&lt;li&gt;order/precedence of include vs. exclude&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;cache-annotations (antmar): cache the results of the annotate (blame) command to speed up generation of annotations at future revisions.

&lt;ul&gt;
&lt;li&gt;case-insensitive cache store&lt;/li&gt;
&lt;li&gt;code reviews&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;caseguard (alexandru): warn/prevent users from committing files which cause problems on case-insensitive systems

&lt;ul&gt;
&lt;li&gt;code reviews&lt;/li&gt;
&lt;li&gt;finishing up support for guarding specific commands&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We posted our detailed progress reports on the &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W12&#34; title=&#34;January 28 progress reports&#34;&gt;January 28&amp;#8217;th wiki page&lt;/a&gt; before this week&amp;#8217;s meeting.&lt;/p&gt;

&lt;p&gt;As we discussed last week, our next project is to improve support for binary files in Mercurial.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Binary files (or large text files) are often replaced with completely new versions during a commit. As a result they don&amp;#8217;t compress well using deltas, and we end up storing many copies of the file, taking up space in each copy of the repository.&lt;/li&gt;
&lt;li&gt;One solution is to store the files in a centralized store (local or remote) which is shared by many copies of the repository.&lt;/li&gt;
&lt;li&gt;This solution is currently implemented as the &amp;#8216;bfiles&amp;#8217; extension by Greg Ward. It provides commands for dealing with b-files that mirror standard Mercurial commands (ex. &amp;#8216;hg bfstatus&amp;#8217; vs. &amp;#8216;hg status&amp;#8217;).&lt;/li&gt;
&lt;li&gt;We plan to integrate bfiles with existing mercurial commands, add full support for HTTP-based stores, and other improvements.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everyone has had a chance to read about and play with bfiles over the past week. The Waterloo people (Tessa, wendyY, and I) have decided to tackle integration with existing Mercurial commands.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial Meeting 1</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-meeting-1/</link>
      <pubDate>Fri, 22 Jan 2010 05:22:30 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-meeting-1/</guid>
      <description>&lt;p&gt;Our team had our first remote meeting today (Thursday). We covered progress made this week, discussed obsticles, and plans for the near future. A quick summary follows. You can find the whole transcript at: &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W10&#34;&gt;https://ucosp.fogbugz.com/default.asp?W10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Progress:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;paulitex: a couple of new features/extensions for config-editor extension. Only a couple more TODOs left. Looking for code reviews.&lt;/li&gt;
&lt;li&gt;alexandru: worked on caseguard extension to support &amp;#8216;hg rm&amp;#8217;. Still needs to address code review feedback.&lt;/li&gt;
&lt;li&gt;antmar: not much new work on cache-annotations, but did go and reviewed paulitex&amp;#8217;s config-editor work. Need to add support for case-neutral names in the annotations cache.&lt;/li&gt;
&lt;li&gt;Tessa: solicited feedback about using shell-globs (wildcards) to exclude files during conversion. We came to a consensus, and Tessa is in the process of testing the changes.&lt;/li&gt;
&lt;li&gt;wendyY: writing tests for tagmerge this week following a small skirmish with some biological viruses (a cold).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looking forward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bmp: once we are ready to submit to mercurial-developers list, we need to learn how to package up our patches. When our current tasks have been completed and submitted, start attacking the bfiles extension.

&lt;ul&gt;
&lt;li&gt;For reference: bfiles is an extension to improve the way Mercurial handles large binary files in its repositories.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;paulitex, alexandru: will attempt pair-programming on bfile issues&lt;/li&gt;
&lt;li&gt;antmar, Tessa, wendyY: take ownership of one issue each, but work together as much as possible on all the issues.

&lt;ul&gt;
&lt;li&gt;We&amp;#8217;ll report on how this works out.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We&amp;#8217;ll be having weekly meetings &amp;#8211; same time, same place, similar agenda:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What: UCOSP Mercurial weekly meeting&lt;/li&gt;
&lt;li&gt;When: Thursdays at 6:30pm EST / 3:30pm PST.&lt;/li&gt;
&lt;li&gt;Where: #ucosp-mercurial on freenode.net&lt;/li&gt;
&lt;li&gt;Logs: &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W6&#34;&gt;https://ucosp.fogbugz.com/default.asp?W6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Mercurial &amp;#8211; Getting Into the Groove</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-getting-into-the-groove/</link>
      <pubDate>Sun, 17 Jan 2010 22:37:07 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/01/mercurial-getting-into-the-groove/</guid>
      <description>&lt;p&gt;The coding sprint is winding down here in Toronto, but the Mercurial UCOSP project is just getting into the groove. As people are making their way home &amp;#8211; across the street or across the country &amp;#8211; I want to take a few minutes to expand on Alex&amp;#8217;s post and summarize this weekend.&lt;/p&gt;

&lt;p&gt;Working on a mature project like Mercurial has its advantages and disadvantages. On the one hand, we have a real successful project to learn from, but at the same time, it is hard to find work that is both accessible to a newbie and has real impact on the project. With that in mind, I think we&amp;#8217;ve all made great progress this weekend.&lt;/p&gt;

&lt;p&gt;I can&amp;#8217;t comment on everyone&amp;#8217;s work individually because I have not tried out all the changes, but a quick look through Kiln (our source control system) shows that everyone has spent some time today on code cleanup and formatting. There are many references to &lt;a href=&#34;http://www.python.org/dev/peps/pep-0008/&#34;&gt;PEP-08&lt;/a&gt;, the Python coding conventions. This is great news because it means people are close to getting their code ready for wider-scale review. It also means that we all have lots of code-review work coming up.&lt;/p&gt;

&lt;p&gt;An important part of this code sprint was learning to work together and establishing the conventions for communication. This includes learning to use FogBugz, our bug tracker and wiki, Kiln, the source control and code review system, and setting up weekly meetings. Our supervisors have been emphasizing the need for more communications every day, and these are the tools will will be using.&lt;/p&gt;

&lt;p&gt;FogBugz and Kiln (user: &lt;strong&gt;Guest&lt;/strong&gt;, password: &lt;strong&gt;anonymous&lt;/strong&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bug tracker: &lt;a href=&#34;https://ucosp.fogbugz.com/&#34;&gt;https://ucosp.fogbugz.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source control: &lt;a href=&#34;https://ucosp.kilnhg.com/&#34;&gt;https://ucosp.kilnhg.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wiki: &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W1&#34;&gt;https://ucosp.fogbugz.com/default.asp?W1&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This information is summarized on the &lt;a href=&#34;https://ucosp.fogbugz.com/default.asp?W6&#34;&gt;Communications&lt;/a&gt; page&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Blog: part of the UCOSP Blog under the Mercurial category &amp;#8211; you are reading it.&lt;/p&gt;

&lt;p&gt;Weekly meetings: IRC-style; details and archive will be available&lt;/p&gt;

&lt;p&gt;General Mercurial resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href=&#34;http://mercurial.selenic.com/&#34;&gt;http://mercurial.selenic.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailing lists: &lt;a href=&#34;http://mercurial.selenic.com/wiki/MailingLists&#34;&gt;http://mercurial.selenic.com/wiki/MailingLists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: #mercurial on freenode.net&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;General UCOSP resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website: &lt;a href=&#34;http://ucosp.wordpress.com&#34;&gt;http://ucosp.wordpress.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mailing list: &lt;a href=&#34;http://groups.google.com/group/ucosp&#34;&gt;http://groups.google.com/group/ucosp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: #ucosp on freenode.net&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alex wrote a great summary for Friday and Saturday at &lt;a href=&#34;http://ucosp.wordpress.com/2010/01/17/first-push-mercurial/&#34;&gt;http://ucosp.wordpress.com/2010/01/17/first-push-mercurial/&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Push: Mercurial</title>
      <link>http://haruute0.github.io/2009-2010/mercurial/2010/01/first-push-mercurial-2/</link>
      <pubDate>Sun, 17 Jan 2010 05:34:38 +0000</pubDate>
      
      <guid>http://haruute0.github.io/2009-2010/mercurial/2010/01/first-push-mercurial-2/</guid>
      <description>&lt;p&gt;During this Code Sprint we focused on a few improvements to Mercurial that make it easier and safer to use. Each of the tasks we worked on was scoped such that only one developer was needed, but this gave everyone a chance to dive head-first into the Mercurial codebase at their own pace. For some (myself included) this is also the first serious project in Python, and these two days were a great opportunity to ask lots of questions.&lt;/p&gt;

&lt;p&gt;We&amp;#8217;re well on our way implementing support for using git sub-repositories, interactively editing Mercurial&amp;#8217;s config files (&lt;code&gt;.hgrc&lt;/code&gt;), cache annotations, auto-merging &lt;code&gt;.hgtags&lt;/code&gt;, matching wildcards when converting from a different source-control system to Mercurial, and preventing users from using files whose names differ only in case (i.e. &lt;code&gt;filename&lt;/code&gt; and &lt;code&gt;FileName&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;We&amp;#8217;ve also discussed the harder problems we&amp;#8217;re attempting over the next few months, namely fixing the way Mercurial handles history for large file renames, improving the way very large files are being stored, and improving &lt;code&gt;hg serve&lt;/code&gt; output. And we&amp;#8217;re sure there will be plenty more to do.&lt;/p&gt;

&lt;p&gt;If you want to take a look at what&amp;#8217;s going on in our world, please check out the  &lt;a href=&#34;http://ucosp.fogbugz.com&#34; title=&#34;UCOSP FogBugz&#34;&gt;UCOSP FogBugz&lt;/a&gt; install and log in with &lt;code&gt;Guest/anonymous&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>